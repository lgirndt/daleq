/*
 * Copyright 2012 brands4friends, Private Sale GmbH
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */




description = 'Daleq Framework'

// Define Dependencies
apply from: script('dependencies')

allprojects {	
    apply plugin: 'idea'	
	
    group = 'de.brands4friends.daleq'
    version = '0.3.0-SNAPSHOT'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'checkstyle'
    apply plugin: 'pmd'
    apply plugin: 'findbugs'
    apply from: script('issues')

    sourceCompatibility = 1.6
    targetCompatibility = 1.6

    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

    repositories {
        mavenCentral()
    }

    dependencies {
        testCompile deps.junit
        testCompile deps.hamcrest
        testCompile deps.easymock
        testCompile deps.sl4jSimple
    }

    test {
        maxHeapSize '400M'
        maxParallelForks 10
    }

    checkstyle {
        configFile file("${rootProject.projectDir}/config/checkstyle/checkstyle.xml")
        configProperties.checkstyleConfigDir = configFile.parentFile
    }

    pmd {
        ruleSets = [
                'basic',
                'design',
                'braces',
                'clone',
                'strings',
                'optimizations',
                'strictexception',
                'typeresolution',
                'unusedcode',
                'coupling'
        ]
        ruleSetFiles = fileTree(dir: "${rootProject.projectDir}/config/pmd", include: '*.xml')
    }
}

File script(String name) {
  project.file("${rootProject.projectDir}/gradle/${name}.gradle")
}

String propertyOr(propName,defaultProp) {
	if( !project.hasProperty(propName) ) {
		return defaultProp
	}
	return project.getProperty(propName)
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.1'
}

